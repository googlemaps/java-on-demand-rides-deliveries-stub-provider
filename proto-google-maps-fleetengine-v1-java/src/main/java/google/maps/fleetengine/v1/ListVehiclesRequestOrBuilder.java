/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

package google.maps.fleetengine.v1;

public interface ListVehiclesRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.ListVehiclesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   * @return Whether the header field is set.
   */
  boolean hasHeader();
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   * @return The header.
   */
  RequestHeader getHeader();
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 12;</code>
   */
  RequestHeaderOrBuilder getHeaderOrBuilder();

  /**
   * <pre>
   * Required. Must be in the format "providers/{provider}".
   * The provider must be the Project ID (for example, sample-cloud-project)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The parent.
   */
  String getParent();
  /**
   * <pre>
   * Required. Must be in the format "providers/{provider}".
   * The provider must be the Project ID (for example, sample-cloud-project)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string parent = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for parent.
   */
  com.google.protobuf.ByteString
      getParentBytes();

  /**
   * <pre>
   * The maximum number of vehicles to return.
   * Default value: 100.
   * </pre>
   *
   * <code>int32 page_size = 3;</code>
   * @return The pageSize.
   */
  int getPageSize();

  /**
   * <pre>
   * The next_page_token value returned from a previous response, if any.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   * @return The pageToken.
   */
  String getPageToken();
  /**
   * <pre>
   * The next_page_token value returned from a previous response, if any.
   * </pre>
   *
   * <code>string page_token = 4;</code>
   * @return The bytes for pageToken.
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();

  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle.
   * The driver is not considered in the capacity search.
   * This is just the number of passengers being considered for a trip.
   * If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   * @return Whether the minimumCapacity field is set.
   */
  boolean hasMinimumCapacity();
  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle.
   * The driver is not considered in the capacity search.
   * This is just the number of passengers being considered for a trip.
   * If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   * @return The minimumCapacity.
   */
  com.google.protobuf.Int32Value getMinimumCapacity();
  /**
   * <pre>
   * Specifies the required minimum capacity of the vehicle.
   * The driver is not considered in the capacity search.
   * This is just the number of passengers being considered for a trip.
   * If set, must be greater or equal to 0.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value minimum_capacity = 6;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getMinimumCapacityOrBuilder();

  /**
   * <pre>
   * Restrict the search to only those vehicles that support at least
   * one of the specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return A list containing the tripTypes.
   */
  java.util.List<TripType> getTripTypesList();
  /**
   * <pre>
   * Restrict the search to only those vehicles that support at least
   * one of the specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return The count of tripTypes.
   */
  int getTripTypesCount();
  /**
   * <pre>
   * Restrict the search to only those vehicles that support at least
   * one of the specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @param index The index of the element to return.
   * @return The tripTypes at the given index.
   */
  TripType getTripTypes(int index);
  /**
   * <pre>
   * Restrict the search to only those vehicles that support at least
   * one of the specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @return A list containing the enum numeric values on the wire for tripTypes.
   */
  java.util.List<Integer>
  getTripTypesValueList();
  /**
   * <pre>
   * Restrict the search to only those vehicles that support at least
   * one of the specified trip types.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.TripType trip_types = 7;</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of tripTypes at the given index.
   */
  int getTripTypesValue(int index);

  /**
   * <pre>
   * Restrict the search to only those vehicles that have updated
   * their locations within the specified duration back from now.
   * If present, must be a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   * @return Whether the maximumStaleness field is set.
   */
  boolean hasMaximumStaleness();
  /**
   * <pre>
   * Restrict the search to only those vehicles that have updated
   * their locations within the specified duration back from now.
   * If present, must be a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   * @return The maximumStaleness.
   */
  com.google.protobuf.Duration getMaximumStaleness();
  /**
   * <pre>
   * Restrict the search to only those vehicles that have updated
   * their locations within the specified duration back from now.
   * If present, must be a valid positive duration.
   * </pre>
   *
   * <code>.google.protobuf.Duration maximum_staleness = 8;</code>
   */
  com.google.protobuf.DurationOrBuilder getMaximumStalenessOrBuilder();

  /**
   * <pre>
   * Required. Restrict the search to those vehicles with the specified type categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return A list containing the vehicleTypeCategories.
   */
  java.util.List<Vehicle.VehicleType.Category> getVehicleTypeCategoriesList();
  /**
   * <pre>
   * Required. Restrict the search to those vehicles with the specified type categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The count of vehicleTypeCategories.
   */
  int getVehicleTypeCategoriesCount();
  /**
   * <pre>
   * Required. Restrict the search to those vehicles with the specified type categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @param index The index of the element to return.
   * @return The vehicleTypeCategories at the given index.
   */
  Vehicle.VehicleType.Category getVehicleTypeCategories(int index);
  /**
   * <pre>
   * Required. Restrict the search to those vehicles with the specified type categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return A list containing the enum numeric values on the wire for vehicleTypeCategories.
   */
  java.util.List<Integer>
  getVehicleTypeCategoriesValueList();
  /**
   * <pre>
   * Required. Restrict the search to those vehicles with the specified type categories.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Vehicle.VehicleType.Category vehicle_type_categories = 9 [(.google.api.field_behavior) = REQUIRED];</code>
   * @param index The index of the value to return.
   * @return The enum numeric value on the wire of vehicleTypeCategories at the given index.
   */
  int getVehicleTypeCategoriesValue(int index);

  /**
   * <pre>
   * Callers can form complex logical operations using the
   * requiredAttributes and requiredOneOfAttributes fields.
   * requiredAttributes is a list; requiredOneOfAttributes uses a message which
   * allows a list of lists. In combination, the two fields allow the
   * composition of this expression:
   * ```
   * (required_attribute[0] AND required_attribute[1] AND ...)
   * AND
   * (required_one_of_attribute[0][0] OR required_one_of_attribute[0][1] OR ...)
   * AND
   * (required_one_of_attribute[1][0] OR required_one_of_attribute[1][1] OR ...)
   * ```
   * Restrict the search to only those vehicles
   * with the specified attributes. This field is a conjunction/AND operation.
   * Your app can specify up to 100 attributes; however, the combined
   * key:value string length cannot exceed 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @return A list containing the requiredAttributes.
   */
  java.util.List<String>
      getRequiredAttributesList();
  /**
   * <pre>
   * Callers can form complex logical operations using the
   * requiredAttributes and requiredOneOfAttributes fields.
   * requiredAttributes is a list; requiredOneOfAttributes uses a message which
   * allows a list of lists. In combination, the two fields allow the
   * composition of this expression:
   * ```
   * (required_attribute[0] AND required_attribute[1] AND ...)
   * AND
   * (required_one_of_attribute[0][0] OR required_one_of_attribute[0][1] OR ...)
   * AND
   * (required_one_of_attribute[1][0] OR required_one_of_attribute[1][1] OR ...)
   * ```
   * Restrict the search to only those vehicles
   * with the specified attributes. This field is a conjunction/AND operation.
   * Your app can specify up to 100 attributes; however, the combined
   * key:value string length cannot exceed 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @return The count of requiredAttributes.
   */
  int getRequiredAttributesCount();
  /**
   * <pre>
   * Callers can form complex logical operations using the
   * requiredAttributes and requiredOneOfAttributes fields.
   * requiredAttributes is a list; requiredOneOfAttributes uses a message which
   * allows a list of lists. In combination, the two fields allow the
   * composition of this expression:
   * ```
   * (required_attribute[0] AND required_attribute[1] AND ...)
   * AND
   * (required_one_of_attribute[0][0] OR required_one_of_attribute[0][1] OR ...)
   * AND
   * (required_one_of_attribute[1][0] OR required_one_of_attribute[1][1] OR ...)
   * ```
   * Restrict the search to only those vehicles
   * with the specified attributes. This field is a conjunction/AND operation.
   * Your app can specify up to 100 attributes; however, the combined
   * key:value string length cannot exceed 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @param index The index of the element to return.
   * @return The requiredAttributes at the given index.
   */
  String getRequiredAttributes(int index);
  /**
   * <pre>
   * Callers can form complex logical operations using the
   * requiredAttributes and requiredOneOfAttributes fields.
   * requiredAttributes is a list; requiredOneOfAttributes uses a message which
   * allows a list of lists. In combination, the two fields allow the
   * composition of this expression:
   * ```
   * (required_attribute[0] AND required_attribute[1] AND ...)
   * AND
   * (required_one_of_attribute[0][0] OR required_one_of_attribute[0][1] OR ...)
   * AND
   * (required_one_of_attribute[1][0] OR required_one_of_attribute[1][1] OR ...)
   * ```
   * Restrict the search to only those vehicles
   * with the specified attributes. This field is a conjunction/AND operation.
   * Your app can specify up to 100 attributes; however, the combined
   * key:value string length cannot exceed 1024 characters.
   * </pre>
   *
   * <code>repeated string required_attributes = 10;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredAttributes at the given index.
   */
  com.google.protobuf.ByteString
      getRequiredAttributesBytes(int index);

  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one
   * of the specified attributes applied to each VehicleAttributeList.
   * Within each list, a vehicle must match at least one of the attributes.
   * This field is an inclusive disjunction/OR operation in each
   * VehicleAttributeList and a conjunction/AND operation across the collection
   * of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @return A list containing the requiredOneOfAttributes.
   */
  java.util.List<String>
      getRequiredOneOfAttributesList();
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one
   * of the specified attributes applied to each VehicleAttributeList.
   * Within each list, a vehicle must match at least one of the attributes.
   * This field is an inclusive disjunction/OR operation in each
   * VehicleAttributeList and a conjunction/AND operation across the collection
   * of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @return The count of requiredOneOfAttributes.
   */
  int getRequiredOneOfAttributesCount();
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one
   * of the specified attributes applied to each VehicleAttributeList.
   * Within each list, a vehicle must match at least one of the attributes.
   * This field is an inclusive disjunction/OR operation in each
   * VehicleAttributeList and a conjunction/AND operation across the collection
   * of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributes at the given index.
   */
  String getRequiredOneOfAttributes(int index);
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one
   * of the specified attributes applied to each VehicleAttributeList.
   * Within each list, a vehicle must match at least one of the attributes.
   * This field is an inclusive disjunction/OR operation in each
   * VehicleAttributeList and a conjunction/AND operation across the collection
   * of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attributes = 13;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributes at the given index.
   */
  com.google.protobuf.ByteString
      getRequiredOneOfAttributesBytes(int index);

  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one set of the
   * specified attributes in the VehicleAttributeList. Within each list, a
   * vehicle must match all of the attributes. This field is a conjunction/AND
   * operation in each VehicleAttributeList and inclusive disjunction/OR
   * operation across the collection of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @return A list containing the requiredOneOfAttributeSets.
   */
  java.util.List<String>
      getRequiredOneOfAttributeSetsList();
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one set of the
   * specified attributes in the VehicleAttributeList. Within each list, a
   * vehicle must match all of the attributes. This field is a conjunction/AND
   * operation in each VehicleAttributeList and inclusive disjunction/OR
   * operation across the collection of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @return The count of requiredOneOfAttributeSets.
   */
  int getRequiredOneOfAttributeSetsCount();
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one set of the
   * specified attributes in the VehicleAttributeList. Within each list, a
   * vehicle must match all of the attributes. This field is a conjunction/AND
   * operation in each VehicleAttributeList and inclusive disjunction/OR
   * operation across the collection of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @param index The index of the element to return.
   * @return The requiredOneOfAttributeSets at the given index.
   */
  String getRequiredOneOfAttributeSets(int index);
  /**
   * <pre>
   * Restrict the search to only those vehicles with at least one set of the
   * specified attributes in the VehicleAttributeList. Within each list, a
   * vehicle must match all of the attributes. This field is a conjunction/AND
   * operation in each VehicleAttributeList and inclusive disjunction/OR
   * operation across the collection of VehicleAttributeList.
   * Format: key1:value1|key2:value2|key3:value3...
   * </pre>
   *
   * <code>repeated string required_one_of_attribute_sets = 15;</code>
   * @param index The index of the value to return.
   * @return The bytes of the requiredOneOfAttributeSets at the given index.
   */
  com.google.protobuf.ByteString
      getRequiredOneOfAttributeSetsBytes(int index);

  /**
   * <pre>
   * Restrict the search to only those vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   * @return The enum numeric value on the wire for vehicleState.
   */
  int getVehicleStateValue();
  /**
   * <pre>
   * Restrict the search to only those vehicles that have this vehicle state.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState vehicle_state = 11;</code>
   * @return The vehicleState.
   */
  VehicleState getVehicleState();

  /**
   * <pre>
   * Only return the vehicles with current trip(s).
   * </pre>
   *
   * <code>bool on_trip_only = 14;</code>
   * @return The onTripOnly.
   */
  boolean getOnTripOnly();
}
