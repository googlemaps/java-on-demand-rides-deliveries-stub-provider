/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

package google.maps.fleetengine.v1;

@Deprecated public interface UpdateVehicleLocationRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.UpdateVehicleLocationRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
   * @return Whether the header field is set.
   */
  boolean hasHeader();
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
   * @return The header.
   */
  RequestHeader getHeader();
  /**
   * <pre>
   * The standard Fleet Engine request header.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.RequestHeader header = 1;</code>
   */
  RequestHeaderOrBuilder getHeaderOrBuilder();

  /**
   * <pre>
   * Required. Must be in the format
   * "providers/{provider}/vehicles/{vehicle}.
   * The {provider} must be the Project ID (for example, sample-cloud-project)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The name.
   */
  String getName();
  /**
   * <pre>
   * Required. Must be in the format
   * "providers/{provider}/vehicles/{vehicle}.
   * The {provider} must be the Project ID (for example, sample-cloud-project)
   * of the Google Cloud Project of which the service account making
   * this call is a member.
   * </pre>
   *
   * <code>string name = 3 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <pre>
   * Required. The location to update to.  The last_location and update_time
   * subfields are required.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleLocation current_location = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the currentLocation field is set.
   */
  boolean hasCurrentLocation();
  /**
   * <pre>
   * Required. The location to update to.  The last_location and update_time
   * subfields are required.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleLocation current_location = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The currentLocation.
   */
  VehicleLocation getCurrentLocation();
  /**
   * <pre>
   * Required. The location to update to.  The last_location and update_time
   * subfields are required.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleLocation current_location = 4 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  VehicleLocationOrBuilder getCurrentLocationOrBuilder();

  /**
   * <pre>
   * Set current vehicle state to either ONLINE or OFFLINE;
   * if set to UNKNOWN_VEHICLE_STATE, vehicle state will not be altered.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState current_state = 5;</code>
   * @return The enum numeric value on the wire for currentState.
   */
  int getCurrentStateValue();
  /**
   * <pre>
   * Set current vehicle state to either ONLINE or OFFLINE;
   * if set to UNKNOWN_VEHICLE_STATE, vehicle state will not be altered.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleState current_state = 5;</code>
   * @return The currentState.
   */
  VehicleState getCurrentState();
}
