/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

package google.maps.fleetengine.v1;

public interface SearchVehiclesResponseOrBuilder extends
    // @@protoc_insertion_point(interface_extends:maps.fleetengine.v1.SearchVehiclesResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * List of vehicles that match the request options.
   * Ordered by ascending vehicle_pickup_eta, with ties broken by ascending
   * trip_type enum value, followed by matches that don't have
   * vehicle_pickup_eta set.
   * Example response: (Logically represented, not actual response fields):
   * * (VehicleId: Vehicle1, ETA: 10 AM, TripType: SHARED),
   * * (VehicleId: Vehicle2, ETA: 10 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle3, ETA: 11 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle4, ETA: Not set, TripType: SHARED),
   * * (VehicleId: Vehicle5, ETA: Not set, TripType: EXCLUSIVE)
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VehicleMatch matches = 1;</code>
   */
  java.util.List<VehicleMatch>
      getMatchesList();
  /**
   * <pre>
   * List of vehicles that match the request options.
   * Ordered by ascending vehicle_pickup_eta, with ties broken by ascending
   * trip_type enum value, followed by matches that don't have
   * vehicle_pickup_eta set.
   * Example response: (Logically represented, not actual response fields):
   * * (VehicleId: Vehicle1, ETA: 10 AM, TripType: SHARED),
   * * (VehicleId: Vehicle2, ETA: 10 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle3, ETA: 11 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle4, ETA: Not set, TripType: SHARED),
   * * (VehicleId: Vehicle5, ETA: Not set, TripType: EXCLUSIVE)
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VehicleMatch matches = 1;</code>
   */
  VehicleMatch getMatches(int index);
  /**
   * <pre>
   * List of vehicles that match the request options.
   * Ordered by ascending vehicle_pickup_eta, with ties broken by ascending
   * trip_type enum value, followed by matches that don't have
   * vehicle_pickup_eta set.
   * Example response: (Logically represented, not actual response fields):
   * * (VehicleId: Vehicle1, ETA: 10 AM, TripType: SHARED),
   * * (VehicleId: Vehicle2, ETA: 10 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle3, ETA: 11 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle4, ETA: Not set, TripType: SHARED),
   * * (VehicleId: Vehicle5, ETA: Not set, TripType: EXCLUSIVE)
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VehicleMatch matches = 1;</code>
   */
  int getMatchesCount();
  /**
   * <pre>
   * List of vehicles that match the request options.
   * Ordered by ascending vehicle_pickup_eta, with ties broken by ascending
   * trip_type enum value, followed by matches that don't have
   * vehicle_pickup_eta set.
   * Example response: (Logically represented, not actual response fields):
   * * (VehicleId: Vehicle1, ETA: 10 AM, TripType: SHARED),
   * * (VehicleId: Vehicle2, ETA: 10 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle3, ETA: 11 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle4, ETA: Not set, TripType: SHARED),
   * * (VehicleId: Vehicle5, ETA: Not set, TripType: EXCLUSIVE)
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VehicleMatch matches = 1;</code>
   */
  java.util.List<? extends VehicleMatchOrBuilder>
      getMatchesOrBuilderList();
  /**
   * <pre>
   * List of vehicles that match the request options.
   * Ordered by ascending vehicle_pickup_eta, with ties broken by ascending
   * trip_type enum value, followed by matches that don't have
   * vehicle_pickup_eta set.
   * Example response: (Logically represented, not actual response fields):
   * * (VehicleId: Vehicle1, ETA: 10 AM, TripType: SHARED),
   * * (VehicleId: Vehicle2, ETA: 10 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle3, ETA: 11 AM, TripType: EXCLUSIVE),
   * * (VehicleId: Vehicle4, ETA: Not set, TripType: SHARED),
   * * (VehicleId: Vehicle5, ETA: Not set, TripType: EXCLUSIVE)
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.VehicleMatch matches = 1;</code>
   */
  VehicleMatchOrBuilder getMatchesOrBuilder(
      int index);
}
