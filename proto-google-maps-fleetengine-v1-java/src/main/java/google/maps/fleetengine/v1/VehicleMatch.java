/*
 * Copyright 2021 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/maps/fleetengine/v1/vehicle_api.proto

package google.maps.fleetengine.v1;

/**
 * <pre>
 * VehicleMatch contains the vehicle, ETA, and distance calculations for a
 * vehicle that matches the SearchVehiclesRequest.
 * </pre>
 *
 * Protobuf type {@code maps.fleetengine.v1.VehicleMatch}
 */
public final class VehicleMatch extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:maps.fleetengine.v1.VehicleMatch)
    VehicleMatchOrBuilder {
private static final long serialVersionUID = 0L;
  // Use VehicleMatch.newBuilder() to construct.
  private VehicleMatch(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private VehicleMatch() {
    tripType_ = 0;
    vehicleTripsWaypoints_ = java.util.Collections.emptyList();
    vehicleMatchType_ = 0;
    requestedOrderedBy_ = 0;
    orderedBy_ = 0;
  }

  @Override
  @SuppressWarnings({"unused"})
  protected Object newInstance(
      UnusedPrivateParameter unused) {
    return new VehicleMatch();
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private VehicleMatch(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            Vehicle.Builder subBuilder = null;
            if (vehicle_ != null) {
              subBuilder = vehicle_.toBuilder();
            }
            vehicle_ = input.readMessage(Vehicle.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehicle_);
              vehicle_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (vehiclePickupEta_ != null) {
              subBuilder = vehiclePickupEta_.toBuilder();
            }
            vehiclePickupEta_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehiclePickupEta_);
              vehiclePickupEta_ = subBuilder.buildPartial();
            }

            break;
          }
          case 26: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (vehiclePickupDistanceMeters_ != null) {
              subBuilder = vehiclePickupDistanceMeters_.toBuilder();
            }
            vehiclePickupDistanceMeters_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehiclePickupDistanceMeters_);
              vehiclePickupDistanceMeters_ = subBuilder.buildPartial();
            }

            break;
          }
          case 34: {
            com.google.protobuf.Timestamp.Builder subBuilder = null;
            if (vehicleDropoffEta_ != null) {
              subBuilder = vehicleDropoffEta_.toBuilder();
            }
            vehicleDropoffEta_ = input.readMessage(com.google.protobuf.Timestamp.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehicleDropoffEta_);
              vehicleDropoffEta_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (vehiclePickupToDropoffDistanceMeters_ != null) {
              subBuilder = vehiclePickupToDropoffDistanceMeters_.toBuilder();
            }
            vehiclePickupToDropoffDistanceMeters_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehiclePickupToDropoffDistanceMeters_);
              vehiclePickupToDropoffDistanceMeters_ = subBuilder.buildPartial();
            }

            break;
          }
          case 48: {
            int rawValue = input.readEnum();

            tripType_ = rawValue;
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000001) != 0)) {
              vehicleTripsWaypoints_ = new java.util.ArrayList<Waypoint>();
              mutable_bitField0_ |= 0x00000001;
            }
            vehicleTripsWaypoints_.add(
                input.readMessage(Waypoint.parser(), extensionRegistry));
            break;
          }
          case 64: {
            int rawValue = input.readEnum();

            vehicleMatchType_ = rawValue;
            break;
          }
          case 72: {
            int rawValue = input.readEnum();

            requestedOrderedBy_ = rawValue;
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            orderedBy_ = rawValue;
            break;
          }
          case 90: {
            com.google.protobuf.Int32Value.Builder subBuilder = null;
            if (vehiclePickupStraightLineDistanceMeters_ != null) {
              subBuilder = vehiclePickupStraightLineDistanceMeters_.toBuilder();
            }
            vehiclePickupStraightLineDistanceMeters_ = input.readMessage(com.google.protobuf.Int32Value.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(vehiclePickupStraightLineDistanceMeters_);
              vehiclePickupStraightLineDistanceMeters_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) != 0)) {
        vehicleTripsWaypoints_ = java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return VehicleApi.internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
  }

  @Override
  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return VehicleApi.internal_static_maps_fleetengine_v1_VehicleMatch_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            VehicleMatch.class, Builder.class);
  }

  /**
   * <pre>
   * Type of vehicle match.
   * </pre>
   *
   * Protobuf enum {@code maps.fleetengine.v1.VehicleMatch.VehicleMatchType}
   */
  public enum VehicleMatchType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Unknown vehicle match type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    UNKNOWN(0),
    /**
     * <pre>
     * Exclusive vehicle trip match
     * </pre>
     *
     * <code>EXCLUSIVE = 1;</code>
     */
    EXCLUSIVE(1),
    /**
     * <pre>
     * Back to back ride match.
     * </pre>
     *
     * <code>BACK_TO_BACK = 2;</code>
     */
    BACK_TO_BACK(2),
    /**
     * <pre>
     * Carpool ride match.
     * </pre>
     *
     * <code>CARPOOL = 3;</code>
     */
    CARPOOL(3),
    /**
     * <pre>
     * Carpool ride match. The car has an active exclusive trip.
     * </pre>
     *
     * <code>CARPOOL_BACK_TO_BACK = 4;</code>
     */
    CARPOOL_BACK_TO_BACK(4),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * Unknown vehicle match type
     * </pre>
     *
     * <code>UNKNOWN = 0;</code>
     */
    public static final int UNKNOWN_VALUE = 0;
    /**
     * <pre>
     * Exclusive vehicle trip match
     * </pre>
     *
     * <code>EXCLUSIVE = 1;</code>
     */
    public static final int EXCLUSIVE_VALUE = 1;
    /**
     * <pre>
     * Back to back ride match.
     * </pre>
     *
     * <code>BACK_TO_BACK = 2;</code>
     */
    public static final int BACK_TO_BACK_VALUE = 2;
    /**
     * <pre>
     * Carpool ride match.
     * </pre>
     *
     * <code>CARPOOL = 3;</code>
     */
    public static final int CARPOOL_VALUE = 3;
    /**
     * <pre>
     * Carpool ride match. The car has an active exclusive trip.
     * </pre>
     *
     * <code>CARPOOL_BACK_TO_BACK = 4;</code>
     */
    public static final int CARPOOL_BACK_TO_BACK_VALUE = 4;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static VehicleMatchType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static VehicleMatchType forNumber(int value) {
      switch (value) {
        case 0: return UNKNOWN;
        case 1: return EXCLUSIVE;
        case 2: return BACK_TO_BACK;
        case 3: return CARPOOL;
        case 4: return CARPOOL_BACK_TO_BACK;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<VehicleMatchType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        VehicleMatchType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<VehicleMatchType>() {
            public VehicleMatchType findValueByNumber(int number) {
              return VehicleMatchType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return VehicleMatch.getDescriptor().getEnumTypes().get(0);
    }

    private static final VehicleMatchType[] VALUES = values();

    public static VehicleMatchType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private VehicleMatchType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:maps.fleetengine.v1.VehicleMatch.VehicleMatchType)
  }

  public static final int VEHICLE_FIELD_NUMBER = 1;
  private Vehicle vehicle_;
  /**
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the vehicle field is set.
   */
  @Override
  public boolean hasVehicle() {
    return vehicle_ != null;
  }
  /**
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The vehicle.
   */
  @Override
  public Vehicle getVehicle() {
    return vehicle_ == null ? Vehicle.getDefaultInstance() : vehicle_;
  }
  /**
   * <pre>
   * Required. A vehicle that matches the request.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @Override
  public VehicleOrBuilder getVehicleOrBuilder() {
    return getVehicle();
  }

  public static final int VEHICLE_PICKUP_ETA_FIELD_NUMBER = 2;
  private com.google.protobuf.Timestamp vehiclePickupEta_;
  /**
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   * @return Whether the vehiclePickupEta field is set.
   */
  @Override
  public boolean hasVehiclePickupEta() {
    return vehiclePickupEta_ != null;
  }
  /**
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   * @return The vehiclePickupEta.
   */
  @Override
  public com.google.protobuf.Timestamp getVehiclePickupEta() {
    return vehiclePickupEta_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : vehiclePickupEta_;
  }
  /**
   * <pre>
   * The vehicle's driving ETA to the pickup point specified in the
   * request. An empty value indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
   */
  @Override
  public com.google.protobuf.TimestampOrBuilder getVehiclePickupEtaOrBuilder() {
    return getVehiclePickupEta();
  }

  public static final int VEHICLE_PICKUP_DISTANCE_METERS_FIELD_NUMBER = 3;
  private com.google.protobuf.Int32Value vehiclePickupDistanceMeters_;
  /**
   * <pre>
   * The vehicle's driving distance to the pickup point specified in
   * the request, including any intermediate pickup or dropoff points for
   * an existing ride.  An empty value indicates a failure in calculating
   * distance for the vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   * @return Whether the vehiclePickupDistanceMeters field is set.
   */
  @Override
  public boolean hasVehiclePickupDistanceMeters() {
    return vehiclePickupDistanceMeters_ != null;
  }
  /**
   * <pre>
   * The vehicle's driving distance to the pickup point specified in
   * the request, including any intermediate pickup or dropoff points for
   * an existing ride.  An empty value indicates a failure in calculating
   * distance for the vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   * @return The vehiclePickupDistanceMeters.
   */
  @Override
  public com.google.protobuf.Int32Value getVehiclePickupDistanceMeters() {
    return vehiclePickupDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupDistanceMeters_;
  }
  /**
   * <pre>
   * The vehicle's driving distance to the pickup point specified in
   * the request, including any intermediate pickup or dropoff points for
   * an existing ride.  An empty value indicates a failure in calculating
   * distance for the vehicle.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
   */
  @Override
  public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupDistanceMetersOrBuilder() {
    return getVehiclePickupDistanceMeters();
  }

  public static final int VEHICLE_PICKUP_STRAIGHT_LINE_DISTANCE_METERS_FIELD_NUMBER = 11;
  private com.google.protobuf.Int32Value vehiclePickupStraightLineDistanceMeters_;
  /**
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request, including intermediate waypoints for
   * existing trips.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return Whether the vehiclePickupStraightLineDistanceMeters field is set.
   */
  @Override
  public boolean hasVehiclePickupStraightLineDistanceMeters() {
    return vehiclePickupStraightLineDistanceMeters_ != null;
  }
  /**
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request, including intermediate waypoints for
   * existing trips.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The vehiclePickupStraightLineDistanceMeters.
   */
  @Override
  public com.google.protobuf.Int32Value getVehiclePickupStraightLineDistanceMeters() {
    return vehiclePickupStraightLineDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupStraightLineDistanceMeters_;
  }
  /**
   * <pre>
   * Required. The straight-line distance between the vehicle and the pickup
   * point specified in the request, including intermediate waypoints for
   * existing trips.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
   */
  @Override
  public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupStraightLineDistanceMetersOrBuilder() {
    return getVehiclePickupStraightLineDistanceMeters();
  }

  public static final int VEHICLE_DROPOFF_ETA_FIELD_NUMBER = 4;
  private com.google.protobuf.Timestamp vehicleDropoffEta_;
  /**
   * <pre>
   * The complete vehicle's driving ETA to the drop off point
   * specified in the request. The ETA includes any required visits for active
   * trips that must be completed before the vehicle visits the dropoff_point
   * specified in the request. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the ETA for the vehicle to reach
   * the dropoff_point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   * @return Whether the vehicleDropoffEta field is set.
   */
  @Override
  public boolean hasVehicleDropoffEta() {
    return vehicleDropoffEta_ != null;
  }
  /**
   * <pre>
   * The complete vehicle's driving ETA to the drop off point
   * specified in the request. The ETA includes any required visits for active
   * trips that must be completed before the vehicle visits the dropoff_point
   * specified in the request. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the ETA for the vehicle to reach
   * the dropoff_point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   * @return The vehicleDropoffEta.
   */
  @Override
  public com.google.protobuf.Timestamp getVehicleDropoffEta() {
    return vehicleDropoffEta_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : vehicleDropoffEta_;
  }
  /**
   * <pre>
   * The complete vehicle's driving ETA to the drop off point
   * specified in the request. The ETA includes any required visits for active
   * trips that must be completed before the vehicle visits the dropoff_point
   * specified in the request. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the ETA for the vehicle to reach
   * the dropoff_point.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
   */
  @Override
  public com.google.protobuf.TimestampOrBuilder getVehicleDropoffEtaOrBuilder() {
    return getVehicleDropoffEta();
  }

  public static final int VEHICLE_PICKUP_TO_DROPOFF_DISTANCE_METERS_FIELD_NUMBER = 5;
  private com.google.protobuf.Int32Value vehiclePickupToDropoffDistanceMeters_;
  /**
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * dropoff points specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   * @return Whether the vehiclePickupToDropoffDistanceMeters field is set.
   */
  @Override
  public boolean hasVehiclePickupToDropoffDistanceMeters() {
    return vehiclePickupToDropoffDistanceMeters_ != null;
  }
  /**
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * dropoff points specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   * @return The vehiclePickupToDropoffDistanceMeters.
   */
  @Override
  public com.google.protobuf.Int32Value getVehiclePickupToDropoffDistanceMeters() {
    return vehiclePickupToDropoffDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupToDropoffDistanceMeters_;
  }
  /**
   * <pre>
   * The vehicle's driving distance (in meters) from the pickup point
   * to the drop off point specified in the request. The distance is only
   * between the two points and does not include the vehicle location or any
   * other points that must be visited before the vehicle visits either the
   * pickup point or dropoff point. The value will only be populated when a
   * dropoff_point is specified in the request. An empty value indicates
   * a failure in calculating the distance from the pickup to
   * dropoff points specified in the request.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
   */
  @Override
  public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupToDropoffDistanceMetersOrBuilder() {
    return getVehiclePickupToDropoffDistanceMeters();
  }

  public static final int TRIP_TYPE_FIELD_NUMBER = 6;
  private int tripType_;
  /**
   * <pre>
   * Required. The trip type of the request that was used to calculate the ETA
   * to the pickup point.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The enum numeric value on the wire for tripType.
   */
  @Override public int getTripTypeValue() {
    return tripType_;
  }
  /**
   * <pre>
   * Required. The trip type of the request that was used to calculate the ETA
   * to the pickup point.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
   * @return The tripType.
   */
  @Override public TripType getTripType() {
    @SuppressWarnings("deprecation")
    TripType result = TripType.valueOf(tripType_);
    return result == null ? TripType.UNRECOGNIZED : result;
  }

  public static final int VEHICLE_TRIPS_WAYPOINTS_FIELD_NUMBER = 7;
  private java.util.List<Waypoint> vehicleTripsWaypoints_;
  /**
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * will include the vehicle location, the pickup/drop off points of active
   * trips for the vehicle and the pickup/dropoff points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @Override
  public java.util.List<Waypoint> getVehicleTripsWaypointsList() {
    return vehicleTripsWaypoints_;
  }
  /**
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * will include the vehicle location, the pickup/drop off points of active
   * trips for the vehicle and the pickup/dropoff points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @Override
  public java.util.List<? extends WaypointOrBuilder>
      getVehicleTripsWaypointsOrBuilderList() {
    return vehicleTripsWaypoints_;
  }
  /**
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * will include the vehicle location, the pickup/drop off points of active
   * trips for the vehicle and the pickup/dropoff points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @Override
  public int getVehicleTripsWaypointsCount() {
    return vehicleTripsWaypoints_.size();
  }
  /**
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * will include the vehicle location, the pickup/drop off points of active
   * trips for the vehicle and the pickup/dropoff points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @Override
  public Waypoint getVehicleTripsWaypoints(int index) {
    return vehicleTripsWaypoints_.get(index);
  }
  /**
   * <pre>
   * The ordered list of waypoints used to calculate the ETA. The list
   * will include the vehicle location, the pickup/drop off points of active
   * trips for the vehicle and the pickup/dropoff points provided in the
   * request. An empty list indicates a failure in calculating ETA for the
   * vehicle.
   * </pre>
   *
   * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
   */
  @Override
  public WaypointOrBuilder getVehicleTripsWaypointsOrBuilder(
      int index) {
    return vehicleTripsWaypoints_.get(index);
  }

  public static final int VEHICLE_MATCH_TYPE_FIELD_NUMBER = 8;
  private int vehicleMatchType_;
  /**
   * <pre>
   * Type of the vehicle match.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
   * @return The enum numeric value on the wire for vehicleMatchType.
   */
  @Override public int getVehicleMatchTypeValue() {
    return vehicleMatchType_;
  }
  /**
   * <pre>
   * Type of the vehicle match.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
   * @return The vehicleMatchType.
   */
  @Override public VehicleMatchType getVehicleMatchType() {
    @SuppressWarnings("deprecation")
    VehicleMatchType result = VehicleMatchType.valueOf(vehicleMatchType_);
    return result == null ? VehicleMatchType.UNRECOGNIZED : result;
  }

  public static final int REQUESTED_ORDERED_BY_FIELD_NUMBER = 9;
  private int requestedOrderedBy_;
  /**
   * <pre>
   * The method the caller requested for sorting vehicle matches.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
   * @return The enum numeric value on the wire for requestedOrderedBy.
   */
  @Override public int getRequestedOrderedByValue() {
    return requestedOrderedBy_;
  }
  /**
   * <pre>
   * The method the caller requested for sorting vehicle matches.
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
   * @return The requestedOrderedBy.
   */
  @Override public SearchVehiclesRequest.VehicleMatchOrder getRequestedOrderedBy() {
    @SuppressWarnings("deprecation")
    SearchVehiclesRequest.VehicleMatchOrder result = SearchVehiclesRequest.VehicleMatchOrder.valueOf(requestedOrderedBy_);
    return result == null ? SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED : result;
  }

  public static final int ORDERED_BY_FIELD_NUMBER = 10;
  private int orderedBy_;
  /**
   * <pre>
   * The actual method that is used to order this vehicle. In normal cases this
   * will match the 'order_by' field from the request, however in certain
   * circumstances such as a failure of google maps backends, a different method
   * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
   * @return The enum numeric value on the wire for orderedBy.
   */
  @Override public int getOrderedByValue() {
    return orderedBy_;
  }
  /**
   * <pre>
   * The actual method that is used to order this vehicle. In normal cases this
   * will match the 'order_by' field from the request, however in certain
   * circumstances such as a failure of google maps backends, a different method
   * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
   * </pre>
   *
   * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
   * @return The orderedBy.
   */
  @Override public SearchVehiclesRequest.VehicleMatchOrder getOrderedBy() {
    @SuppressWarnings("deprecation")
    SearchVehiclesRequest.VehicleMatchOrder result = SearchVehiclesRequest.VehicleMatchOrder.valueOf(orderedBy_);
    return result == null ? SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  @Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (vehicle_ != null) {
      output.writeMessage(1, getVehicle());
    }
    if (vehiclePickupEta_ != null) {
      output.writeMessage(2, getVehiclePickupEta());
    }
    if (vehiclePickupDistanceMeters_ != null) {
      output.writeMessage(3, getVehiclePickupDistanceMeters());
    }
    if (vehicleDropoffEta_ != null) {
      output.writeMessage(4, getVehicleDropoffEta());
    }
    if (vehiclePickupToDropoffDistanceMeters_ != null) {
      output.writeMessage(5, getVehiclePickupToDropoffDistanceMeters());
    }
    if (tripType_ != TripType.UNKNOWN_TRIP_TYPE.getNumber()) {
      output.writeEnum(6, tripType_);
    }
    for (int i = 0; i < vehicleTripsWaypoints_.size(); i++) {
      output.writeMessage(7, vehicleTripsWaypoints_.get(i));
    }
    if (vehicleMatchType_ != VehicleMatchType.UNKNOWN.getNumber()) {
      output.writeEnum(8, vehicleMatchType_);
    }
    if (requestedOrderedBy_ != SearchVehiclesRequest.VehicleMatchOrder.UNKNOWN_VEHICLE_MATCH_ORDER.getNumber()) {
      output.writeEnum(9, requestedOrderedBy_);
    }
    if (orderedBy_ != SearchVehiclesRequest.VehicleMatchOrder.UNKNOWN_VEHICLE_MATCH_ORDER.getNumber()) {
      output.writeEnum(10, orderedBy_);
    }
    if (vehiclePickupStraightLineDistanceMeters_ != null) {
      output.writeMessage(11, getVehiclePickupStraightLineDistanceMeters());
    }
    unknownFields.writeTo(output);
  }

  @Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (vehicle_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getVehicle());
    }
    if (vehiclePickupEta_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getVehiclePickupEta());
    }
    if (vehiclePickupDistanceMeters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, getVehiclePickupDistanceMeters());
    }
    if (vehicleDropoffEta_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getVehicleDropoffEta());
    }
    if (vehiclePickupToDropoffDistanceMeters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getVehiclePickupToDropoffDistanceMeters());
    }
    if (tripType_ != TripType.UNKNOWN_TRIP_TYPE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(6, tripType_);
    }
    for (int i = 0; i < vehicleTripsWaypoints_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, vehicleTripsWaypoints_.get(i));
    }
    if (vehicleMatchType_ != VehicleMatchType.UNKNOWN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(8, vehicleMatchType_);
    }
    if (requestedOrderedBy_ != SearchVehiclesRequest.VehicleMatchOrder.UNKNOWN_VEHICLE_MATCH_ORDER.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, requestedOrderedBy_);
    }
    if (orderedBy_ != SearchVehiclesRequest.VehicleMatchOrder.UNKNOWN_VEHICLE_MATCH_ORDER.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, orderedBy_);
    }
    if (vehiclePickupStraightLineDistanceMeters_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(11, getVehiclePickupStraightLineDistanceMeters());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof VehicleMatch)) {
      return super.equals(obj);
    }
    VehicleMatch other = (VehicleMatch) obj;

    if (hasVehicle() != other.hasVehicle()) return false;
    if (hasVehicle()) {
      if (!getVehicle()
          .equals(other.getVehicle())) return false;
    }
    if (hasVehiclePickupEta() != other.hasVehiclePickupEta()) return false;
    if (hasVehiclePickupEta()) {
      if (!getVehiclePickupEta()
          .equals(other.getVehiclePickupEta())) return false;
    }
    if (hasVehiclePickupDistanceMeters() != other.hasVehiclePickupDistanceMeters()) return false;
    if (hasVehiclePickupDistanceMeters()) {
      if (!getVehiclePickupDistanceMeters()
          .equals(other.getVehiclePickupDistanceMeters())) return false;
    }
    if (hasVehiclePickupStraightLineDistanceMeters() != other.hasVehiclePickupStraightLineDistanceMeters()) return false;
    if (hasVehiclePickupStraightLineDistanceMeters()) {
      if (!getVehiclePickupStraightLineDistanceMeters()
          .equals(other.getVehiclePickupStraightLineDistanceMeters())) return false;
    }
    if (hasVehicleDropoffEta() != other.hasVehicleDropoffEta()) return false;
    if (hasVehicleDropoffEta()) {
      if (!getVehicleDropoffEta()
          .equals(other.getVehicleDropoffEta())) return false;
    }
    if (hasVehiclePickupToDropoffDistanceMeters() != other.hasVehiclePickupToDropoffDistanceMeters()) return false;
    if (hasVehiclePickupToDropoffDistanceMeters()) {
      if (!getVehiclePickupToDropoffDistanceMeters()
          .equals(other.getVehiclePickupToDropoffDistanceMeters())) return false;
    }
    if (tripType_ != other.tripType_) return false;
    if (!getVehicleTripsWaypointsList()
        .equals(other.getVehicleTripsWaypointsList())) return false;
    if (vehicleMatchType_ != other.vehicleMatchType_) return false;
    if (requestedOrderedBy_ != other.requestedOrderedBy_) return false;
    if (orderedBy_ != other.orderedBy_) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasVehicle()) {
      hash = (37 * hash) + VEHICLE_FIELD_NUMBER;
      hash = (53 * hash) + getVehicle().hashCode();
    }
    if (hasVehiclePickupEta()) {
      hash = (37 * hash) + VEHICLE_PICKUP_ETA_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupEta().hashCode();
    }
    if (hasVehiclePickupDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupDistanceMeters().hashCode();
    }
    if (hasVehiclePickupStraightLineDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_STRAIGHT_LINE_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupStraightLineDistanceMeters().hashCode();
    }
    if (hasVehicleDropoffEta()) {
      hash = (37 * hash) + VEHICLE_DROPOFF_ETA_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleDropoffEta().hashCode();
    }
    if (hasVehiclePickupToDropoffDistanceMeters()) {
      hash = (37 * hash) + VEHICLE_PICKUP_TO_DROPOFF_DISTANCE_METERS_FIELD_NUMBER;
      hash = (53 * hash) + getVehiclePickupToDropoffDistanceMeters().hashCode();
    }
    hash = (37 * hash) + TRIP_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + tripType_;
    if (getVehicleTripsWaypointsCount() > 0) {
      hash = (37 * hash) + VEHICLE_TRIPS_WAYPOINTS_FIELD_NUMBER;
      hash = (53 * hash) + getVehicleTripsWaypointsList().hashCode();
    }
    hash = (37 * hash) + VEHICLE_MATCH_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + vehicleMatchType_;
    hash = (37 * hash) + REQUESTED_ORDERED_BY_FIELD_NUMBER;
    hash = (53 * hash) + requestedOrderedBy_;
    hash = (37 * hash) + ORDERED_BY_FIELD_NUMBER;
    hash = (53 * hash) + orderedBy_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static VehicleMatch parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static VehicleMatch parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static VehicleMatch parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static VehicleMatch parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static VehicleMatch parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static VehicleMatch parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static VehicleMatch parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static VehicleMatch parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static VehicleMatch parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static VehicleMatch parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static VehicleMatch parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static VehicleMatch parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(VehicleMatch prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * VehicleMatch contains the vehicle, ETA, and distance calculations for a
   * vehicle that matches the SearchVehiclesRequest.
   * </pre>
   *
   * Protobuf type {@code maps.fleetengine.v1.VehicleMatch}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:maps.fleetengine.v1.VehicleMatch)
      VehicleMatchOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return VehicleApi.internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return VehicleApi.internal_static_maps_fleetengine_v1_VehicleMatch_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              VehicleMatch.class, Builder.class);
    }

    // Construct using google.maps.fleetengine.v1.VehicleMatch.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getVehicleTripsWaypointsFieldBuilder();
      }
    }
    @Override
    public Builder clear() {
      super.clear();
      if (vehicleBuilder_ == null) {
        vehicle_ = null;
      } else {
        vehicle_ = null;
        vehicleBuilder_ = null;
      }
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEta_ = null;
      } else {
        vehiclePickupEta_ = null;
        vehiclePickupEtaBuilder_ = null;
      }
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMeters_ = null;
      } else {
        vehiclePickupDistanceMeters_ = null;
        vehiclePickupDistanceMetersBuilder_ = null;
      }
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMeters_ = null;
      } else {
        vehiclePickupStraightLineDistanceMeters_ = null;
        vehiclePickupStraightLineDistanceMetersBuilder_ = null;
      }
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEta_ = null;
      } else {
        vehicleDropoffEta_ = null;
        vehicleDropoffEtaBuilder_ = null;
      }
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMeters_ = null;
      } else {
        vehiclePickupToDropoffDistanceMeters_ = null;
        vehiclePickupToDropoffDistanceMetersBuilder_ = null;
      }
      tripType_ = 0;

      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        vehicleTripsWaypointsBuilder_.clear();
      }
      vehicleMatchType_ = 0;

      requestedOrderedBy_ = 0;

      orderedBy_ = 0;

      return this;
    }

    @Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return VehicleApi.internal_static_maps_fleetengine_v1_VehicleMatch_descriptor;
    }

    @Override
    public VehicleMatch getDefaultInstanceForType() {
      return VehicleMatch.getDefaultInstance();
    }

    @Override
    public VehicleMatch build() {
      VehicleMatch result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @Override
    public VehicleMatch buildPartial() {
      VehicleMatch result = new VehicleMatch(this);
      int from_bitField0_ = bitField0_;
      if (vehicleBuilder_ == null) {
        result.vehicle_ = vehicle_;
      } else {
        result.vehicle_ = vehicleBuilder_.build();
      }
      if (vehiclePickupEtaBuilder_ == null) {
        result.vehiclePickupEta_ = vehiclePickupEta_;
      } else {
        result.vehiclePickupEta_ = vehiclePickupEtaBuilder_.build();
      }
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        result.vehiclePickupDistanceMeters_ = vehiclePickupDistanceMeters_;
      } else {
        result.vehiclePickupDistanceMeters_ = vehiclePickupDistanceMetersBuilder_.build();
      }
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        result.vehiclePickupStraightLineDistanceMeters_ = vehiclePickupStraightLineDistanceMeters_;
      } else {
        result.vehiclePickupStraightLineDistanceMeters_ = vehiclePickupStraightLineDistanceMetersBuilder_.build();
      }
      if (vehicleDropoffEtaBuilder_ == null) {
        result.vehicleDropoffEta_ = vehicleDropoffEta_;
      } else {
        result.vehicleDropoffEta_ = vehicleDropoffEtaBuilder_.build();
      }
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        result.vehiclePickupToDropoffDistanceMeters_ = vehiclePickupToDropoffDistanceMeters_;
      } else {
        result.vehiclePickupToDropoffDistanceMeters_ = vehiclePickupToDropoffDistanceMetersBuilder_.build();
      }
      result.tripType_ = tripType_;
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0)) {
          vehicleTripsWaypoints_ = java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.vehicleTripsWaypoints_ = vehicleTripsWaypoints_;
      } else {
        result.vehicleTripsWaypoints_ = vehicleTripsWaypointsBuilder_.build();
      }
      result.vehicleMatchType_ = vehicleMatchType_;
      result.requestedOrderedBy_ = requestedOrderedBy_;
      result.orderedBy_ = orderedBy_;
      onBuilt();
      return result;
    }

    @Override
    public Builder clone() {
      return super.clone();
    }
    @Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.setField(field, value);
    }
    @Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return super.addRepeatedField(field, value);
    }
    @Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof VehicleMatch) {
        return mergeFrom((VehicleMatch)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(VehicleMatch other) {
      if (other == VehicleMatch.getDefaultInstance()) return this;
      if (other.hasVehicle()) {
        mergeVehicle(other.getVehicle());
      }
      if (other.hasVehiclePickupEta()) {
        mergeVehiclePickupEta(other.getVehiclePickupEta());
      }
      if (other.hasVehiclePickupDistanceMeters()) {
        mergeVehiclePickupDistanceMeters(other.getVehiclePickupDistanceMeters());
      }
      if (other.hasVehiclePickupStraightLineDistanceMeters()) {
        mergeVehiclePickupStraightLineDistanceMeters(other.getVehiclePickupStraightLineDistanceMeters());
      }
      if (other.hasVehicleDropoffEta()) {
        mergeVehicleDropoffEta(other.getVehicleDropoffEta());
      }
      if (other.hasVehiclePickupToDropoffDistanceMeters()) {
        mergeVehiclePickupToDropoffDistanceMeters(other.getVehiclePickupToDropoffDistanceMeters());
      }
      if (other.tripType_ != 0) {
        setTripTypeValue(other.getTripTypeValue());
      }
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (!other.vehicleTripsWaypoints_.isEmpty()) {
          if (vehicleTripsWaypoints_.isEmpty()) {
            vehicleTripsWaypoints_ = other.vehicleTripsWaypoints_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureVehicleTripsWaypointsIsMutable();
            vehicleTripsWaypoints_.addAll(other.vehicleTripsWaypoints_);
          }
          onChanged();
        }
      } else {
        if (!other.vehicleTripsWaypoints_.isEmpty()) {
          if (vehicleTripsWaypointsBuilder_.isEmpty()) {
            vehicleTripsWaypointsBuilder_.dispose();
            vehicleTripsWaypointsBuilder_ = null;
            vehicleTripsWaypoints_ = other.vehicleTripsWaypoints_;
            bitField0_ = (bitField0_ & ~0x00000001);
            vehicleTripsWaypointsBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getVehicleTripsWaypointsFieldBuilder() : null;
          } else {
            vehicleTripsWaypointsBuilder_.addAllMessages(other.vehicleTripsWaypoints_);
          }
        }
      }
      if (other.vehicleMatchType_ != 0) {
        setVehicleMatchTypeValue(other.getVehicleMatchTypeValue());
      }
      if (other.requestedOrderedBy_ != 0) {
        setRequestedOrderedByValue(other.getRequestedOrderedByValue());
      }
      if (other.orderedBy_ != 0) {
        setOrderedByValue(other.getOrderedByValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @Override
    public final boolean isInitialized() {
      return true;
    }

    @Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      VehicleMatch parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (VehicleMatch) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private Vehicle vehicle_;
    private com.google.protobuf.SingleFieldBuilderV3<
        Vehicle, Vehicle.Builder, VehicleOrBuilder> vehicleBuilder_;
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the vehicle field is set.
     */
    public boolean hasVehicle() {
      return vehicleBuilder_ != null || vehicle_ != null;
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The vehicle.
     */
    public Vehicle getVehicle() {
      if (vehicleBuilder_ == null) {
        return vehicle_ == null ? Vehicle.getDefaultInstance() : vehicle_;
      } else {
        return vehicleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setVehicle(Vehicle value) {
      if (vehicleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehicle_ = value;
        onChanged();
      } else {
        vehicleBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setVehicle(
        Vehicle.Builder builderForValue) {
      if (vehicleBuilder_ == null) {
        vehicle_ = builderForValue.build();
        onChanged();
      } else {
        vehicleBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeVehicle(Vehicle value) {
      if (vehicleBuilder_ == null) {
        if (vehicle_ != null) {
          vehicle_ =
            Vehicle.newBuilder(vehicle_).mergeFrom(value).buildPartial();
        } else {
          vehicle_ = value;
        }
        onChanged();
      } else {
        vehicleBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearVehicle() {
      if (vehicleBuilder_ == null) {
        vehicle_ = null;
        onChanged();
      } else {
        vehicle_ = null;
        vehicleBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Vehicle.Builder getVehicleBuilder() {
      
      onChanged();
      return getVehicleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public VehicleOrBuilder getVehicleOrBuilder() {
      if (vehicleBuilder_ != null) {
        return vehicleBuilder_.getMessageOrBuilder();
      } else {
        return vehicle_ == null ?
            Vehicle.getDefaultInstance() : vehicle_;
      }
    }
    /**
     * <pre>
     * Required. A vehicle that matches the request.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.Vehicle vehicle = 1 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        Vehicle, Vehicle.Builder, VehicleOrBuilder>
        getVehicleFieldBuilder() {
      if (vehicleBuilder_ == null) {
        vehicleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            Vehicle, Vehicle.Builder, VehicleOrBuilder>(
                getVehicle(),
                getParentForChildren(),
                isClean());
        vehicle_ = null;
      }
      return vehicleBuilder_;
    }

    private com.google.protobuf.Timestamp vehiclePickupEta_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> vehiclePickupEtaBuilder_;
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     * @return Whether the vehiclePickupEta field is set.
     */
    public boolean hasVehiclePickupEta() {
      return vehiclePickupEtaBuilder_ != null || vehiclePickupEta_ != null;
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     * @return The vehiclePickupEta.
     */
    public com.google.protobuf.Timestamp getVehiclePickupEta() {
      if (vehiclePickupEtaBuilder_ == null) {
        return vehiclePickupEta_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : vehiclePickupEta_;
      } else {
        return vehiclePickupEtaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder setVehiclePickupEta(com.google.protobuf.Timestamp value) {
      if (vehiclePickupEtaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupEta_ = value;
        onChanged();
      } else {
        vehiclePickupEtaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder setVehiclePickupEta(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEta_ = builderForValue.build();
        onChanged();
      } else {
        vehiclePickupEtaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder mergeVehiclePickupEta(com.google.protobuf.Timestamp value) {
      if (vehiclePickupEtaBuilder_ == null) {
        if (vehiclePickupEta_ != null) {
          vehiclePickupEta_ =
            com.google.protobuf.Timestamp.newBuilder(vehiclePickupEta_).mergeFrom(value).buildPartial();
        } else {
          vehiclePickupEta_ = value;
        }
        onChanged();
      } else {
        vehiclePickupEtaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public Builder clearVehiclePickupEta() {
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEta_ = null;
        onChanged();
      } else {
        vehiclePickupEta_ = null;
        vehiclePickupEtaBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public com.google.protobuf.Timestamp.Builder getVehiclePickupEtaBuilder() {
      
      onChanged();
      return getVehiclePickupEtaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getVehiclePickupEtaOrBuilder() {
      if (vehiclePickupEtaBuilder_ != null) {
        return vehiclePickupEtaBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupEta_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : vehiclePickupEta_;
      }
    }
    /**
     * <pre>
     * The vehicle's driving ETA to the pickup point specified in the
     * request. An empty value indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_pickup_eta = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getVehiclePickupEtaFieldBuilder() {
      if (vehiclePickupEtaBuilder_ == null) {
        vehiclePickupEtaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getVehiclePickupEta(),
                getParentForChildren(),
                isClean());
        vehiclePickupEta_ = null;
      }
      return vehiclePickupEtaBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> vehiclePickupDistanceMetersBuilder_;
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     * @return Whether the vehiclePickupDistanceMeters field is set.
     */
    public boolean hasVehiclePickupDistanceMeters() {
      return vehiclePickupDistanceMetersBuilder_ != null || vehiclePickupDistanceMeters_ != null;
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     * @return The vehiclePickupDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupDistanceMeters() {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        return vehiclePickupDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupDistanceMeters_;
      } else {
        return vehiclePickupDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder setVehiclePickupDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupDistanceMeters_ = value;
        onChanged();
      } else {
        vehiclePickupDistanceMetersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder setVehiclePickupDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMeters_ = builderForValue.build();
        onChanged();
      } else {
        vehiclePickupDistanceMetersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder mergeVehiclePickupDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        if (vehiclePickupDistanceMeters_ != null) {
          vehiclePickupDistanceMeters_ =
            com.google.protobuf.Int32Value.newBuilder(vehiclePickupDistanceMeters_).mergeFrom(value).buildPartial();
        } else {
          vehiclePickupDistanceMeters_ = value;
        }
        onChanged();
      } else {
        vehiclePickupDistanceMetersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public Builder clearVehiclePickupDistanceMeters() {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMeters_ = null;
        onChanged();
      } else {
        vehiclePickupDistanceMeters_ = null;
        vehiclePickupDistanceMetersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public com.google.protobuf.Int32Value.Builder getVehiclePickupDistanceMetersBuilder() {
      
      onChanged();
      return getVehiclePickupDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupDistanceMetersOrBuilder() {
      if (vehiclePickupDistanceMetersBuilder_ != null) {
        return vehiclePickupDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupDistanceMeters_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupDistanceMeters_;
      }
    }
    /**
     * <pre>
     * The vehicle's driving distance to the pickup point specified in
     * the request, including any intermediate pickup or dropoff points for
     * an existing ride.  An empty value indicates a failure in calculating
     * distance for the vehicle.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_distance_meters = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getVehiclePickupDistanceMetersFieldBuilder() {
      if (vehiclePickupDistanceMetersBuilder_ == null) {
        vehiclePickupDistanceMetersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupDistanceMeters(),
                getParentForChildren(),
                isClean());
        vehiclePickupDistanceMeters_ = null;
      }
      return vehiclePickupDistanceMetersBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupStraightLineDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> vehiclePickupStraightLineDistanceMetersBuilder_;
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return Whether the vehiclePickupStraightLineDistanceMeters field is set.
     */
    public boolean hasVehiclePickupStraightLineDistanceMeters() {
      return vehiclePickupStraightLineDistanceMetersBuilder_ != null || vehiclePickupStraightLineDistanceMeters_ != null;
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The vehiclePickupStraightLineDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupStraightLineDistanceMeters() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        return vehiclePickupStraightLineDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupStraightLineDistanceMeters_;
      } else {
        return vehiclePickupStraightLineDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setVehiclePickupStraightLineDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupStraightLineDistanceMeters_ = value;
        onChanged();
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder setVehiclePickupStraightLineDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMeters_ = builderForValue.build();
        onChanged();
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder mergeVehiclePickupStraightLineDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        if (vehiclePickupStraightLineDistanceMeters_ != null) {
          vehiclePickupStraightLineDistanceMeters_ =
            com.google.protobuf.Int32Value.newBuilder(vehiclePickupStraightLineDistanceMeters_).mergeFrom(value).buildPartial();
        } else {
          vehiclePickupStraightLineDistanceMeters_ = value;
        }
        onChanged();
      } else {
        vehiclePickupStraightLineDistanceMetersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public Builder clearVehiclePickupStraightLineDistanceMeters() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMeters_ = null;
        onChanged();
      } else {
        vehiclePickupStraightLineDistanceMeters_ = null;
        vehiclePickupStraightLineDistanceMetersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.Int32Value.Builder getVehiclePickupStraightLineDistanceMetersBuilder() {
      
      onChanged();
      return getVehiclePickupStraightLineDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupStraightLineDistanceMetersOrBuilder() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ != null) {
        return vehiclePickupStraightLineDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupStraightLineDistanceMeters_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupStraightLineDistanceMeters_;
      }
    }
    /**
     * <pre>
     * Required. The straight-line distance between the vehicle and the pickup
     * point specified in the request, including intermediate waypoints for
     * existing trips.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_straight_line_distance_meters = 11 [(.google.api.field_behavior) = REQUIRED];</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getVehiclePickupStraightLineDistanceMetersFieldBuilder() {
      if (vehiclePickupStraightLineDistanceMetersBuilder_ == null) {
        vehiclePickupStraightLineDistanceMetersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupStraightLineDistanceMeters(),
                getParentForChildren(),
                isClean());
        vehiclePickupStraightLineDistanceMeters_ = null;
      }
      return vehiclePickupStraightLineDistanceMetersBuilder_;
    }

    private com.google.protobuf.Timestamp vehicleDropoffEta_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> vehicleDropoffEtaBuilder_;
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     * @return Whether the vehicleDropoffEta field is set.
     */
    public boolean hasVehicleDropoffEta() {
      return vehicleDropoffEtaBuilder_ != null || vehicleDropoffEta_ != null;
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     * @return The vehicleDropoffEta.
     */
    public com.google.protobuf.Timestamp getVehicleDropoffEta() {
      if (vehicleDropoffEtaBuilder_ == null) {
        return vehicleDropoffEta_ == null ? com.google.protobuf.Timestamp.getDefaultInstance() : vehicleDropoffEta_;
      } else {
        return vehicleDropoffEtaBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder setVehicleDropoffEta(com.google.protobuf.Timestamp value) {
      if (vehicleDropoffEtaBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehicleDropoffEta_ = value;
        onChanged();
      } else {
        vehicleDropoffEtaBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder setVehicleDropoffEta(
        com.google.protobuf.Timestamp.Builder builderForValue) {
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEta_ = builderForValue.build();
        onChanged();
      } else {
        vehicleDropoffEtaBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder mergeVehicleDropoffEta(com.google.protobuf.Timestamp value) {
      if (vehicleDropoffEtaBuilder_ == null) {
        if (vehicleDropoffEta_ != null) {
          vehicleDropoffEta_ =
            com.google.protobuf.Timestamp.newBuilder(vehicleDropoffEta_).mergeFrom(value).buildPartial();
        } else {
          vehicleDropoffEta_ = value;
        }
        onChanged();
      } else {
        vehicleDropoffEtaBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public Builder clearVehicleDropoffEta() {
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEta_ = null;
        onChanged();
      } else {
        vehicleDropoffEta_ = null;
        vehicleDropoffEtaBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public com.google.protobuf.Timestamp.Builder getVehicleDropoffEtaBuilder() {
      
      onChanged();
      return getVehicleDropoffEtaFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    public com.google.protobuf.TimestampOrBuilder getVehicleDropoffEtaOrBuilder() {
      if (vehicleDropoffEtaBuilder_ != null) {
        return vehicleDropoffEtaBuilder_.getMessageOrBuilder();
      } else {
        return vehicleDropoffEta_ == null ?
            com.google.protobuf.Timestamp.getDefaultInstance() : vehicleDropoffEta_;
      }
    }
    /**
     * <pre>
     * The complete vehicle's driving ETA to the drop off point
     * specified in the request. The ETA includes any required visits for active
     * trips that must be completed before the vehicle visits the dropoff_point
     * specified in the request. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the ETA for the vehicle to reach
     * the dropoff_point.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp vehicle_dropoff_eta = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder> 
        getVehicleDropoffEtaFieldBuilder() {
      if (vehicleDropoffEtaBuilder_ == null) {
        vehicleDropoffEtaBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Timestamp, com.google.protobuf.Timestamp.Builder, com.google.protobuf.TimestampOrBuilder>(
                getVehicleDropoffEta(),
                getParentForChildren(),
                isClean());
        vehicleDropoffEta_ = null;
      }
      return vehicleDropoffEtaBuilder_;
    }

    private com.google.protobuf.Int32Value vehiclePickupToDropoffDistanceMeters_;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> vehiclePickupToDropoffDistanceMetersBuilder_;
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     * @return Whether the vehiclePickupToDropoffDistanceMeters field is set.
     */
    public boolean hasVehiclePickupToDropoffDistanceMeters() {
      return vehiclePickupToDropoffDistanceMetersBuilder_ != null || vehiclePickupToDropoffDistanceMeters_ != null;
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     * @return The vehiclePickupToDropoffDistanceMeters.
     */
    public com.google.protobuf.Int32Value getVehiclePickupToDropoffDistanceMeters() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        return vehiclePickupToDropoffDistanceMeters_ == null ? com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupToDropoffDistanceMeters_;
      } else {
        return vehiclePickupToDropoffDistanceMetersBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder setVehiclePickupToDropoffDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        vehiclePickupToDropoffDistanceMeters_ = value;
        onChanged();
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder setVehiclePickupToDropoffDistanceMeters(
        com.google.protobuf.Int32Value.Builder builderForValue) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMeters_ = builderForValue.build();
        onChanged();
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder mergeVehiclePickupToDropoffDistanceMeters(com.google.protobuf.Int32Value value) {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        if (vehiclePickupToDropoffDistanceMeters_ != null) {
          vehiclePickupToDropoffDistanceMeters_ =
            com.google.protobuf.Int32Value.newBuilder(vehiclePickupToDropoffDistanceMeters_).mergeFrom(value).buildPartial();
        } else {
          vehiclePickupToDropoffDistanceMeters_ = value;
        }
        onChanged();
      } else {
        vehiclePickupToDropoffDistanceMetersBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public Builder clearVehiclePickupToDropoffDistanceMeters() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMeters_ = null;
        onChanged();
      } else {
        vehiclePickupToDropoffDistanceMeters_ = null;
        vehiclePickupToDropoffDistanceMetersBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public com.google.protobuf.Int32Value.Builder getVehiclePickupToDropoffDistanceMetersBuilder() {
      
      onChanged();
      return getVehiclePickupToDropoffDistanceMetersFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    public com.google.protobuf.Int32ValueOrBuilder getVehiclePickupToDropoffDistanceMetersOrBuilder() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ != null) {
        return vehiclePickupToDropoffDistanceMetersBuilder_.getMessageOrBuilder();
      } else {
        return vehiclePickupToDropoffDistanceMeters_ == null ?
            com.google.protobuf.Int32Value.getDefaultInstance() : vehiclePickupToDropoffDistanceMeters_;
      }
    }
    /**
     * <pre>
     * The vehicle's driving distance (in meters) from the pickup point
     * to the drop off point specified in the request. The distance is only
     * between the two points and does not include the vehicle location or any
     * other points that must be visited before the vehicle visits either the
     * pickup point or dropoff point. The value will only be populated when a
     * dropoff_point is specified in the request. An empty value indicates
     * a failure in calculating the distance from the pickup to
     * dropoff points specified in the request.
     * </pre>
     *
     * <code>.google.protobuf.Int32Value vehicle_pickup_to_dropoff_distance_meters = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder> 
        getVehiclePickupToDropoffDistanceMetersFieldBuilder() {
      if (vehiclePickupToDropoffDistanceMetersBuilder_ == null) {
        vehiclePickupToDropoffDistanceMetersBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.protobuf.Int32Value, com.google.protobuf.Int32Value.Builder, com.google.protobuf.Int32ValueOrBuilder>(
                getVehiclePickupToDropoffDistanceMeters(),
                getParentForChildren(),
                isClean());
        vehiclePickupToDropoffDistanceMeters_ = null;
      }
      return vehiclePickupToDropoffDistanceMetersBuilder_;
    }

    private int tripType_ = 0;
    /**
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The enum numeric value on the wire for tripType.
     */
    @Override public int getTripTypeValue() {
      return tripType_;
    }
    /**
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The enum numeric value on the wire for tripType to set.
     * @return This builder for chaining.
     */
    public Builder setTripTypeValue(int value) {
      
      tripType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return The tripType.
     */
    @Override
    public TripType getTripType() {
      @SuppressWarnings("deprecation")
      TripType result = TripType.valueOf(tripType_);
      return result == null ? TripType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @param value The tripType to set.
     * @return This builder for chaining.
     */
    public Builder setTripType(TripType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      tripType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Required. The trip type of the request that was used to calculate the ETA
     * to the pickup point.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.TripType trip_type = 6 [(.google.api.field_behavior) = REQUIRED];</code>
     * @return This builder for chaining.
     */
    public Builder clearTripType() {
      
      tripType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<Waypoint> vehicleTripsWaypoints_ =
      java.util.Collections.emptyList();
    private void ensureVehicleTripsWaypointsIsMutable() {
      if (!((bitField0_ & 0x00000001) != 0)) {
        vehicleTripsWaypoints_ = new java.util.ArrayList<Waypoint>(vehicleTripsWaypoints_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        Waypoint, Waypoint.Builder, WaypointOrBuilder> vehicleTripsWaypointsBuilder_;

    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<Waypoint> getVehicleTripsWaypointsList() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
      } else {
        return vehicleTripsWaypointsBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public int getVehicleTripsWaypointsCount() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.size();
      } else {
        return vehicleTripsWaypointsBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Waypoint getVehicleTripsWaypoints(int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.get(index);
      } else {
        return vehicleTripsWaypointsBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder setVehicleTripsWaypoints(
        int index, Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.set(index, value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder setVehicleTripsWaypoints(
        int index, Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.set(index, builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        int index, Waypoint value) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(index, value);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addVehicleTripsWaypoints(
        int index, Waypoint.Builder builderForValue) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.add(index, builderForValue.build());
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder addAllVehicleTripsWaypoints(
        Iterable<? extends Waypoint> values) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, vehicleTripsWaypoints_);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder clearVehicleTripsWaypoints() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypoints_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Builder removeVehicleTripsWaypoints(int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        ensureVehicleTripsWaypointsIsMutable();
        vehicleTripsWaypoints_.remove(index);
        onChanged();
      } else {
        vehicleTripsWaypointsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Waypoint.Builder getVehicleTripsWaypointsBuilder(
        int index) {
      return getVehicleTripsWaypointsFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public WaypointOrBuilder getVehicleTripsWaypointsOrBuilder(
        int index) {
      if (vehicleTripsWaypointsBuilder_ == null) {
        return vehicleTripsWaypoints_.get(index);  } else {
        return vehicleTripsWaypointsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<? extends WaypointOrBuilder>
         getVehicleTripsWaypointsOrBuilderList() {
      if (vehicleTripsWaypointsBuilder_ != null) {
        return vehicleTripsWaypointsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(vehicleTripsWaypoints_);
      }
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Waypoint.Builder addVehicleTripsWaypointsBuilder() {
      return getVehicleTripsWaypointsFieldBuilder().addBuilder(
          Waypoint.getDefaultInstance());
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public Waypoint.Builder addVehicleTripsWaypointsBuilder(
        int index) {
      return getVehicleTripsWaypointsFieldBuilder().addBuilder(
          index, Waypoint.getDefaultInstance());
    }
    /**
     * <pre>
     * The ordered list of waypoints used to calculate the ETA. The list
     * will include the vehicle location, the pickup/drop off points of active
     * trips for the vehicle and the pickup/dropoff points provided in the
     * request. An empty list indicates a failure in calculating ETA for the
     * vehicle.
     * </pre>
     *
     * <code>repeated .maps.fleetengine.v1.Waypoint vehicle_trips_waypoints = 7;</code>
     */
    public java.util.List<Waypoint.Builder>
         getVehicleTripsWaypointsBuilderList() {
      return getVehicleTripsWaypointsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        Waypoint, Waypoint.Builder, WaypointOrBuilder>
        getVehicleTripsWaypointsFieldBuilder() {
      if (vehicleTripsWaypointsBuilder_ == null) {
        vehicleTripsWaypointsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            Waypoint, Waypoint.Builder, WaypointOrBuilder>(
                vehicleTripsWaypoints_,
                ((bitField0_ & 0x00000001) != 0),
                getParentForChildren(),
                isClean());
        vehicleTripsWaypoints_ = null;
      }
      return vehicleTripsWaypointsBuilder_;
    }

    private int vehicleMatchType_ = 0;
    /**
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     * @return The enum numeric value on the wire for vehicleMatchType.
     */
    @Override public int getVehicleMatchTypeValue() {
      return vehicleMatchType_;
    }
    /**
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     * @param value The enum numeric value on the wire for vehicleMatchType to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleMatchTypeValue(int value) {
      
      vehicleMatchType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     * @return The vehicleMatchType.
     */
    @Override
    public VehicleMatchType getVehicleMatchType() {
      @SuppressWarnings("deprecation")
      VehicleMatchType result = VehicleMatchType.valueOf(vehicleMatchType_);
      return result == null ? VehicleMatchType.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     * @param value The vehicleMatchType to set.
     * @return This builder for chaining.
     */
    public Builder setVehicleMatchType(VehicleMatchType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      vehicleMatchType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Type of the vehicle match.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.VehicleMatch.VehicleMatchType vehicle_match_type = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearVehicleMatchType() {
      
      vehicleMatchType_ = 0;
      onChanged();
      return this;
    }

    private int requestedOrderedBy_ = 0;
    /**
     * <pre>
     * The method the caller requested for sorting vehicle matches.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
     * @return The enum numeric value on the wire for requestedOrderedBy.
     */
    @Override public int getRequestedOrderedByValue() {
      return requestedOrderedBy_;
    }
    /**
     * <pre>
     * The method the caller requested for sorting vehicle matches.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
     * @param value The enum numeric value on the wire for requestedOrderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedOrderedByValue(int value) {
      
      requestedOrderedBy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The method the caller requested for sorting vehicle matches.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
     * @return The requestedOrderedBy.
     */
    @Override
    public SearchVehiclesRequest.VehicleMatchOrder getRequestedOrderedBy() {
      @SuppressWarnings("deprecation")
      SearchVehiclesRequest.VehicleMatchOrder result = SearchVehiclesRequest.VehicleMatchOrder.valueOf(requestedOrderedBy_);
      return result == null ? SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The method the caller requested for sorting vehicle matches.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
     * @param value The requestedOrderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setRequestedOrderedBy(SearchVehiclesRequest.VehicleMatchOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      requestedOrderedBy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The method the caller requested for sorting vehicle matches.
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder requested_ordered_by = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearRequestedOrderedBy() {
      
      requestedOrderedBy_ = 0;
      onChanged();
      return this;
    }

    private int orderedBy_ = 0;
    /**
     * <pre>
     * The actual method that is used to order this vehicle. In normal cases this
     * will match the 'order_by' field from the request, however in certain
     * circumstances such as a failure of google maps backends, a different method
     * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     * @return The enum numeric value on the wire for orderedBy.
     */
    @Override public int getOrderedByValue() {
      return orderedBy_;
    }
    /**
     * <pre>
     * The actual method that is used to order this vehicle. In normal cases this
     * will match the 'order_by' field from the request, however in certain
     * circumstances such as a failure of google maps backends, a different method
     * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     * @param value The enum numeric value on the wire for orderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderedByValue(int value) {
      
      orderedBy_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual method that is used to order this vehicle. In normal cases this
     * will match the 'order_by' field from the request, however in certain
     * circumstances such as a failure of google maps backends, a different method
     * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     * @return The orderedBy.
     */
    @Override
    public SearchVehiclesRequest.VehicleMatchOrder getOrderedBy() {
      @SuppressWarnings("deprecation")
      SearchVehiclesRequest.VehicleMatchOrder result = SearchVehiclesRequest.VehicleMatchOrder.valueOf(orderedBy_);
      return result == null ? SearchVehiclesRequest.VehicleMatchOrder.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * The actual method that is used to order this vehicle. In normal cases this
     * will match the 'order_by' field from the request, however in certain
     * circumstances such as a failure of google maps backends, a different method
     * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     * @param value The orderedBy to set.
     * @return This builder for chaining.
     */
    public Builder setOrderedBy(SearchVehiclesRequest.VehicleMatchOrder value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      orderedBy_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The actual method that is used to order this vehicle. In normal cases this
     * will match the 'order_by' field from the request, however in certain
     * circumstances such as a failure of google maps backends, a different method
     * may be used (such as PICKUP_POINT_STRAIGHT_DISTANCE).
     * </pre>
     *
     * <code>.maps.fleetengine.v1.SearchVehiclesRequest.VehicleMatchOrder ordered_by = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrderedBy() {
      
      orderedBy_ = 0;
      onChanged();
      return this;
    }
    @Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:maps.fleetengine.v1.VehicleMatch)
  }

  // @@protoc_insertion_point(class_scope:maps.fleetengine.v1.VehicleMatch)
  private static final VehicleMatch DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new VehicleMatch();
  }

  public static VehicleMatch getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<VehicleMatch>
      PARSER = new com.google.protobuf.AbstractParser<VehicleMatch>() {
    @Override
    public VehicleMatch parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new VehicleMatch(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<VehicleMatch> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<VehicleMatch> getParserForType() {
    return PARSER;
  }

  @Override
  public VehicleMatch getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

